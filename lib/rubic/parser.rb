#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module Rubic

class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 148)
EOT = [false, nil] # end of token
SYM_CHARS = Regexp.escape("+-*/<>=!?")

def parse(str)
  @s = StringScanner.new(str)
  do_parse
end

def next_token
  @s.skip(/\s+/)
  return EOT if @s.eos?

  case
  when @s.scan(/[0-9]+(\.[0-9]+)?/)
    [:NUMBER, @s[0].include?('.') ? @s[0].to_f : @s[0].to_i]
  when @s.scan(/[()']/)
    [@s[0], nil]
  when @s.scan(/[A-Za-z_#{SYM_CHARS}][A-Za-z0-9_#{SYM_CHARS}]*/o)
    case @s[0] # keyword check
    when 'define'
      [:KW_DEFINE, nil]
    when 'cond'
      [:KW_COND, nil]
    when 'else'
      [:KW_ELSE, nil]
    when 'if'
      [:KW_IF, nil]
    when 'and'
      [:KW_AND, nil]
    when 'or'
      [:KW_OR, nil]
    when 'lambda'
      [:KW_LAMBDA, nil]
    when 'let'
      [:KW_LET, nil]
    when 'quote'
      [:KW_QUOTE, nil]
    when 'set!'
      [:KW_SET_BANG, nil]
    when 'begin'
      [:KW_BEGIN, nil]
    else
      [:IDENT, @s[0].to_sym]
    end
  when @s.scan(/"([^"]*)"/)
    [:STRING, @s[1]]
  else
    raise Rubic::ParseError, "unknown character #{@s.getch}"
  end
end

def on_error(t, val, vstack)
  raise Rubic::ParseError, "parse error near #{token_to_str(t)}"
end

...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    19,    22,    20,     4,     5,     6,    23,    24,    75,
    25,    26,    27,    28,    17,    29,    30,     3,    52,    72,
     3,     4,     5,     6,     4,     5,     6,    60,    73,    38,
    68,    17,     3,    37,    17,     3,     4,     5,     6,     4,
     5,     6,    41,    71,    53,    70,    17,     3,    74,    17,
     3,     4,     5,     6,     4,     5,     6,    69,    50,    68,
    76,    17,     3,    46,    17,     3,     4,     5,     6,     4,
     5,     6,    44,    79,    43,    41,    17,    63,     3,    17,
    82,    33,     4,     5,     6,     3,    18,    81,    85,     4,
     5,     6,    17,   nil,   nil,   nil,     3,   nil,   nil,    17,
     4,     5,     6,     3,   nil,   nil,   nil,     4,     5,     6,
    17,   nil,   nil,   nil,     3,   nil,    84,    17,     4,     5,
     6,     3,   nil,   nil,   nil,     4,     5,     6,    17,   nil,
   nil,   nil,     3,   nil,   nil,    17,     4,     5,     6,     3,
   nil,   nil,   nil,     4,     5,     6,    17,   nil,   nil,   nil,
     3,   nil,    48,    17,     4,     5,     6,     3,   nil,    49,
   nil,     4,     5,     6,    17,   nil,   nil,   nil,     3,   nil,
   nil,    17,     4,     5,     6,     3,   nil,   nil,   nil,     4,
     5,     6,    17,   nil,   nil,   nil,     3,   nil,   nil,    17,
     4,     5,     6,     3,   nil,   nil,   nil,     4,     5,     6,
    17,   nil,   nil,   nil,     3,   nil,   nil,    17,     4,     5,
     6,     3,   nil,    56,   nil,     4,     5,     6,    17,   nil,
   nil,   nil,     3,   nil,    62,    17,     4,     5,     6,     3,
   nil,   nil,   nil,     4,     5,     6,    17,   nil,   nil,   nil,
   nil,   nil,   nil,    17 ]

racc_action_check = [
     3,     3,     3,     3,     3,     3,     3,     3,     3,    66,
     3,     3,     3,     3,     3,     3,     3,    70,    38,    61,
     0,    70,    70,    70,     0,     0,     0,    45,    64,    23,
    64,    70,    16,    23,     0,    17,    16,    16,    16,    17,
    17,    17,    39,    59,    39,    59,    16,    79,    65,    17,
    19,    79,    79,    79,    19,    19,    19,    58,    36,    58,
    67,    79,    20,    29,    19,    21,    20,    20,    20,    21,
    21,    21,    27,    71,    26,    24,    20,    51,    78,    21,
    78,    18,    78,    78,    78,    77,     1,    77,    83,    77,
    77,    77,    78,   nil,   nil,   nil,    25,   nil,   nil,    77,
    25,    25,    25,    73,   nil,   nil,   nil,    73,    73,    73,
    25,   nil,   nil,   nil,    80,   nil,    80,    73,    80,    80,
    80,    28,   nil,   nil,   nil,    28,    28,    28,    80,   nil,
   nil,   nil,    69,   nil,   nil,    28,    69,    69,    69,    30,
   nil,   nil,   nil,    30,    30,    30,    69,   nil,   nil,   nil,
    34,   nil,    34,    30,    34,    34,    34,    35,   nil,    35,
   nil,    35,    35,    35,    34,   nil,   nil,   nil,    57,   nil,
   nil,    35,    57,    57,    57,    37,   nil,   nil,   nil,    37,
    37,    37,    57,   nil,   nil,   nil,    56,   nil,   nil,    37,
    56,    56,    56,    55,   nil,   nil,   nil,    55,    55,    55,
    56,   nil,   nil,   nil,    41,   nil,   nil,    55,    41,    41,
    41,    46,   nil,    41,   nil,    46,    46,    46,    41,   nil,
   nil,   nil,    47,   nil,    47,    46,    47,    47,    47,    42,
   nil,   nil,   nil,    42,    42,    42,    47,   nil,   nil,   nil,
   nil,   nil,   nil,    42 ]

racc_action_pointer = [
    18,    86,   nil,    -2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    30,    33,    81,    48,
    60,    63,   nil,    27,    73,    94,    72,    70,   119,    57,
   137,   nil,   nil,   nil,   148,   155,    54,   173,    12,    40,
   nil,   202,   227,   nil,   nil,    23,   209,   220,   nil,   nil,
   nil,    73,   nil,   nil,   nil,   191,   184,   166,    53,    41,
   nil,    15,   nil,   nil,    24,    44,     5,    56,   nil,   130,
    15,    67,   nil,   101,   nil,   nil,   nil,    83,    76,    45,
   112,   nil,   nil,    84,   nil,   nil ]

racc_action_default = [
   -19,   -39,    -1,   -39,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -20,   -39,   -39,   -39,
   -39,   -19,    -5,   -39,   -39,   -39,   -39,   -39,   -39,   -39,
   -39,   -18,   -36,    86,   -39,   -39,   -39,   -39,   -39,   -39,
   -26,   -39,   -39,   -23,   -33,   -39,   -39,   -39,    -2,    -3,
    -4,   -39,   -23,   -25,   -27,   -39,   -39,   -39,   -39,   -39,
   -35,   -39,   -38,   -21,   -39,   -39,   -39,   -39,   -24,   -39,
   -39,   -39,   -37,   -39,   -28,   -29,   -30,   -39,   -39,   -39,
   -39,   -31,   -32,   -39,   -22,   -34 ]

racc_goto_table = [
    21,    58,     2,    40,     1,    34,    35,    39,    59,   nil,
    64,   nil,   nil,    31,    32,   nil,    47,   nil,    54,   nil,
   nil,   nil,    42,    36,   nil,    45,   nil,   nil,   nil,   nil,
   nil,    31,    31,   nil,    51,   nil,   nil,   nil,    55,    57,
   nil,   nil,   nil,    61,    31,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    65,    66,    67,    77,    78,   nil,   nil,    80,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31,    31,    83,    31 ]

racc_goto_check = [
     3,    13,     2,    15,     1,     4,     4,    14,    16,   nil,
    13,   nil,   nil,     3,     3,   nil,     4,   nil,    15,   nil,
   nil,   nil,     3,     2,   nil,     3,   nil,   nil,   nil,   nil,
   nil,     3,     3,   nil,     3,   nil,   nil,   nil,     3,     3,
   nil,   nil,   nil,     3,     3,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     3,     3,     3,     4,     4,   nil,   nil,     4,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     3,     3,     3,     3 ]

racc_goto_pointer = [
   nil,     4,     2,    -3,   -14,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -42,   -17,   -21,   -36 ]

racc_goto_default = [
   nil,   nil,   nil,    15,    16,     7,     8,     9,    10,    11,
    12,    13,    14,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 20, :_reduce_none,
  4, 22, :_reduce_2,
  4, 22, :_reduce_3,
  4, 22, :_reduce_4,
  2, 22, :_reduce_5,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 22, :_reduce_none,
  1, 23, :_reduce_17,
  2, 23, :_reduce_18,
  0, 21, :_reduce_19,
  1, 21, :_reduce_none,
  5, 24, :_reduce_21,
  8, 24, :_reduce_22,
  0, 32, :_reduce_23,
  2, 32, :_reduce_24,
  4, 25, :_reduce_25,
  1, 33, :_reduce_26,
  2, 33, :_reduce_27,
  4, 34, :_reduce_28,
  4, 34, :_reduce_29,
  6, 26, :_reduce_30,
  7, 27, :_reduce_31,
  7, 28, :_reduce_32,
  0, 35, :_reduce_33,
  5, 35, :_reduce_34,
  4, 29, :_reduce_35,
  2, 29, :_reduce_36,
  5, 30, :_reduce_37,
  4, 31, :_reduce_38 ]

racc_reduce_n = 39

racc_shift_n = 86

racc_token_table = {
  false => 0,
  :error => 1,
  "(" => 2,
  :KW_AND => 3,
  ")" => 4,
  :KW_OR => 5,
  :IDENT => 6,
  :NUMBER => 7,
  :STRING => 8,
  :KW_DEFINE => 9,
  :KW_COND => 10,
  :KW_ELSE => 11,
  :KW_IF => 12,
  :KW_LAMBDA => 13,
  :KW_LET => 14,
  :KW_QUOTE => 15,
  "'" => 16,
  :KW_SET_BANG => 17,
  :KW_BEGIN => 18 }

racc_nt_base = 19

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"(\"",
  "KW_AND",
  "\")\"",
  "KW_OR",
  "IDENT",
  "NUMBER",
  "STRING",
  "KW_DEFINE",
  "KW_COND",
  "KW_ELSE",
  "KW_IF",
  "KW_LAMBDA",
  "KW_LET",
  "KW_QUOTE",
  "\"'\"",
  "KW_SET_BANG",
  "KW_BEGIN",
  "$start",
  "program",
  "opt_seq",
  "expr",
  "seq",
  "define",
  "cond",
  "if",
  "lambda",
  "let",
  "quote",
  "set",
  "begin",
  "params",
  "clauses",
  "clause",
  "defs" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_2(val, _values)
                [:and, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_3(val, _values)
                [:or, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_4(val, _values)
                [val[1], *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_5(val, _values)
                []
          
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_17(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_18(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_19(val, _values)
                  []
            
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_21(val, _values)
                  [:define, val[2], val[3]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_22(val, _values)
                  [:define, [val[3], *val[4]], *val[6]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_23(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_24(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_25(val, _values)
                  [:cond, *val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_26(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_27(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_28(val, _values)
                  [val[1], val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_29(val, _values)
                  [:else, val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_30(val, _values)
              [:if, val[2], val[3], val[4]]
        
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_31(val, _values)
                  [:lambda, val[3], *val[5]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_32(val, _values)
                [:let, val[3], *val[5]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_33(val, _values)
                []
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_34(val, _values)
                val[0].push([val[2], val[3]])
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_35(val, _values)
                [:quote, val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_36(val, _values)
                [:quote, val[1]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_37(val, _values)
              [:set!, val[2], val[3]]
        
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_38(val, _values)
                [:begin, *val[2]]
          
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser

end # of module Rubic
