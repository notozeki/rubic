#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module Rubic

class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 141)
EOT = [false, nil] # end of token
SYM_CHARS = Regexp.escape("+-*/<>=!?")

def parse(str)
  @s = StringScanner.new(str)
  do_parse
end

def next_token
  @s.skip(/\s+/)
  return EOT if @s.eos?

  case
  when @s.scan(/[0-9]+(\.[0-9]+)?/)
    [:NUMBER, @s[0].include?('.') ? @s[0].to_f : @s[0].to_i]
  when @s.scan(/[()']/)
    [@s[0], nil]
  when @s.scan(/[A-Za-z_#{SYM_CHARS}][A-Za-z0-9_#{SYM_CHARS}]*/o)
    case @s[0] # keyword check
    when 'define'
      [:KW_DEFINE, nil]
    when 'cond'
      [:KW_COND, nil]
    when 'else'
      [:KW_ELSE, nil]
    when 'if'
      [:KW_IF, nil]
    when 'and'
      [:KW_AND, nil]
    when 'or'
      [:KW_OR, nil]
    when 'lambda'
      [:KW_LAMBDA, nil]
    when 'let'
      [:KW_LET, nil]
    when 'quote'
      [:KW_QUOTE, nil]
    when 'set!'
      [:KW_SET_BANG, nil]
    else
      [:IDENT, @s[0].to_sym]
    end
  when @s.scan(/"([^"]*)"/)
    [:STRING, @s[1]]
  else
    raise Rubic::ParseError, "unknown character #{@s.getch}"
  end
end

def on_error(t, val, vstack)
  raise Rubic::ParseError, "parse error near #{token_to_str(t)}"
end

...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,    18,    21,    19,     4,     5,     6,    22,    23,    71,
    24,    25,    26,    27,    16,    28,     3,    49,    68,     3,
     4,     5,     6,     4,     5,     6,    57,    69,    36,    64,
    16,     3,    35,    16,     3,     4,     5,     6,     4,     5,
     6,    39,    67,    50,    66,    16,     3,    70,    16,     3,
     4,     5,     6,     4,     5,     6,    65,    47,    64,    72,
    16,     3,    44,    16,     3,     4,     5,     6,     4,     5,
     6,    42,    75,    41,    39,    16,    59,     3,    16,    78,
    31,     4,     5,     6,     3,    17,    77,    81,     4,     5,
     6,    16,   nil,   nil,   nil,     3,   nil,   nil,    16,     4,
     5,     6,     3,   nil,    80,   nil,     4,     5,     6,    16,
   nil,   nil,   nil,     3,   nil,   nil,    16,     4,     5,     6,
     3,   nil,   nil,   nil,     4,     5,     6,    16,   nil,   nil,
   nil,     3,   nil,   nil,    16,     4,     5,     6,     3,   nil,
    45,   nil,     4,     5,     6,    16,   nil,   nil,   nil,     3,
   nil,    46,    16,     4,     5,     6,     3,   nil,   nil,   nil,
     4,     5,     6,    16,   nil,   nil,   nil,     3,   nil,   nil,
    16,     4,     5,     6,     3,   nil,   nil,   nil,     4,     5,
     6,    16,   nil,   nil,   nil,     3,   nil,   nil,    16,     4,
     5,     6,     3,   nil,   nil,   nil,     4,     5,     6,    16,
   nil,    53,   nil,     3,   nil,   nil,    16,     4,     5,     6,
     3,   nil,   nil,   nil,     4,     5,     6,    16,   nil,   nil,
   nil,   nil,   nil,   nil,    16 ]

racc_action_check = [
     3,     3,     3,     3,     3,     3,     3,     3,     3,    62,
     3,     3,     3,     3,     3,     3,    69,    36,    58,     0,
    69,    69,    69,     0,     0,     0,    43,    60,    22,    60,
    69,    15,    22,     0,    16,    15,    15,    15,    16,    16,
    16,    37,    56,    37,    56,    15,    75,    61,    16,    18,
    75,    75,    75,    18,    18,    18,    55,    34,    55,    63,
    75,    19,    28,    18,    20,    19,    19,    19,    20,    20,
    20,    26,    67,    25,    23,    19,    48,    74,    20,    74,
    17,    74,    74,    74,    73,     1,    73,    79,    73,    73,
    73,    74,   nil,   nil,   nil,    24,   nil,   nil,    73,    24,
    24,    24,    76,   nil,    76,   nil,    76,    76,    76,    24,
   nil,   nil,   nil,    66,   nil,   nil,    76,    66,    66,    66,
    27,   nil,   nil,   nil,    27,    27,    27,    66,   nil,   nil,
   nil,    65,   nil,   nil,    27,    65,    65,    65,    32,   nil,
    32,   nil,    32,    32,    32,    65,   nil,   nil,   nil,    33,
   nil,    33,    32,    33,    33,    33,    54,   nil,   nil,   nil,
    54,    54,    54,    33,   nil,   nil,   nil,    35,   nil,   nil,
    54,    35,    35,    35,    53,   nil,   nil,   nil,    53,    53,
    53,    35,   nil,   nil,   nil,    52,   nil,   nil,    53,    52,
    52,    52,    39,   nil,   nil,   nil,    39,    39,    39,    52,
   nil,    39,   nil,    44,   nil,   nil,    39,    44,    44,    44,
    40,   nil,   nil,   nil,    40,    40,    40,    44,   nil,   nil,
   nil,   nil,   nil,   nil,    40 ]

racc_action_pointer = [
    17,    85,   nil,    -2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    29,    32,    80,    47,    59,
    62,   nil,    26,    72,    93,    71,    69,   118,    56,   nil,
   nil,   nil,   136,   147,    53,   165,    11,    39,   nil,   190,
   208,   nil,   nil,    22,   201,   nil,   nil,   nil,    72,   nil,
   nil,   nil,   183,   172,   154,    52,    40,   nil,    14,   nil,
    23,    43,     5,    55,   nil,   129,   111,    66,   nil,    14,
   nil,   nil,   nil,    82,    75,    44,   100,   nil,   nil,    83,
   nil,   nil ]

racc_action_default = [
   -18,   -37,    -1,   -37,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -19,   -37,   -37,   -37,   -37,
   -18,    -5,   -37,   -37,   -37,   -37,   -37,   -37,   -37,   -17,
   -35,    82,   -37,   -37,   -37,   -37,   -37,   -37,   -25,   -37,
   -37,   -22,   -32,   -37,   -37,    -2,    -3,    -4,   -37,   -22,
   -24,   -26,   -37,   -37,   -37,   -37,   -37,   -34,   -37,   -20,
   -37,   -37,   -37,   -37,   -23,   -37,   -37,   -37,   -36,   -37,
   -27,   -28,   -29,   -37,   -37,   -37,   -37,   -30,   -31,   -37,
   -21,   -33 ]

racc_goto_table = [
    20,    38,     2,    55,     1,    32,    33,    37,    56,   nil,
   nil,    60,    29,    30,   nil,    51,   nil,   nil,   nil,   nil,
   nil,    40,    34,   nil,    43,   nil,   nil,   nil,   nil,    29,
    29,   nil,    48,   nil,   nil,   nil,    52,    54,   nil,   nil,
   nil,    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    61,
    62,    63,    73,    74,   nil,   nil,    76,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    29,    29,    79,    29 ]

racc_goto_check = [
     3,    14,     2,    12,     1,     4,     4,    13,    15,   nil,
   nil,    12,     3,     3,   nil,    14,   nil,   nil,   nil,   nil,
   nil,     3,     2,   nil,     3,   nil,   nil,   nil,   nil,     3,
     3,   nil,     3,   nil,   nil,   nil,     3,     3,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     3,     3,     4,     4,   nil,   nil,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     3,     3,     3,     3 ]

racc_goto_pointer = [
   nil,     4,     2,    -3,   -13,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -38,   -16,   -22,   -34 ]

racc_goto_default = [
   nil,   nil,   nil,    14,    15,     7,     8,     9,    10,    11,
    12,    13,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 19, :_reduce_none,
  4, 21, :_reduce_2,
  4, 21, :_reduce_3,
  4, 21, :_reduce_4,
  2, 21, :_reduce_5,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 21, :_reduce_none,
  1, 22, :_reduce_16,
  2, 22, :_reduce_17,
  0, 20, :_reduce_18,
  1, 20, :_reduce_none,
  5, 23, :_reduce_20,
  8, 23, :_reduce_21,
  0, 30, :_reduce_22,
  2, 30, :_reduce_23,
  4, 24, :_reduce_24,
  1, 31, :_reduce_25,
  2, 31, :_reduce_26,
  4, 32, :_reduce_27,
  4, 32, :_reduce_28,
  6, 25, :_reduce_29,
  7, 26, :_reduce_30,
  7, 27, :_reduce_31,
  0, 33, :_reduce_32,
  5, 33, :_reduce_33,
  4, 28, :_reduce_34,
  2, 28, :_reduce_35,
  5, 29, :_reduce_36 ]

racc_reduce_n = 37

racc_shift_n = 82

racc_token_table = {
  false => 0,
  :error => 1,
  "(" => 2,
  :KW_AND => 3,
  ")" => 4,
  :KW_OR => 5,
  :IDENT => 6,
  :NUMBER => 7,
  :STRING => 8,
  :KW_DEFINE => 9,
  :KW_COND => 10,
  :KW_ELSE => 11,
  :KW_IF => 12,
  :KW_LAMBDA => 13,
  :KW_LET => 14,
  :KW_QUOTE => 15,
  "'" => 16,
  :KW_SET_BANG => 17 }

racc_nt_base = 18

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"(\"",
  "KW_AND",
  "\")\"",
  "KW_OR",
  "IDENT",
  "NUMBER",
  "STRING",
  "KW_DEFINE",
  "KW_COND",
  "KW_ELSE",
  "KW_IF",
  "KW_LAMBDA",
  "KW_LET",
  "KW_QUOTE",
  "\"'\"",
  "KW_SET_BANG",
  "$start",
  "program",
  "opt_seq",
  "expr",
  "seq",
  "define",
  "cond",
  "if",
  "lambda",
  "let",
  "quote",
  "set",
  "params",
  "clauses",
  "clause",
  "defs" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_2(val, _values)
                [:and, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_3(val, _values)
                [:or, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_4(val, _values)
                [val[1], *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_5(val, _values)
                []
          
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_16(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_17(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_18(val, _values)
                  []
            
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_20(val, _values)
                  [:define, val[2], val[3]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_21(val, _values)
                  [:define, [val[3], *val[4]], *val[6]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 60)
  def _reduce_22(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_23(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 70)
  def _reduce_24(val, _values)
                  [:cond, *val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 75)
  def _reduce_25(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_26(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_27(val, _values)
                  [val[1], val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_28(val, _values)
                  [:else, val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_29(val, _values)
              [:if, val[2], val[3], val[4]]
        
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_30(val, _values)
                  [:lambda, val[3], *val[5]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_31(val, _values)
                [:let, val[3], *val[5]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_32(val, _values)
                []
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_33(val, _values)
                val[0].push([val[2], val[3]])
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_34(val, _values)
                [:quote, val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_35(val, _values)
                [:quote, val[1]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_36(val, _values)
              [:set!, val[2], val[3]]
        
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser

end # of module Rubic
