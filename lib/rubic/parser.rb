#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module Rubic
  class UnknownCharacterError < StandardError; end

class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 108)
EOT = [false, nil] # end of token

def parse(str)
  @s = StringScanner.new(str)
  do_parse
end

def next_token
  @s.skip(/\s+/)
  return EOT if @s.eos?

  case
  when @s.scan(/[0-9]+(\.[0-9]+)?/)
    [:NUMBER, @s[0].include?('.') ? @s[0].to_f : @s[0].to_i]
  when @s.scan(/[#{Regexp.escape("()+-*/<>=")}]/o)
    [@s[0], nil]
  when @s.scan(/[A-Za-z_-][A-Za-z0-9_-]*/)
    case @s[0] # keyword check
    when 'define'
      [:KW_DEFINE, nil]
    when 'cond'
      [:KW_COND, nil]
    when 'else'
      [:KW_ELSE, nil]
    else
      [:IDENT, @s[0]]
    end
  else
    raise UnknownCharacterError, "unknown character #{@s.getch}"
  end
end

...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    21,    58,    32,    35,    54,    47,    52,    53,    59,     7,
     8,    31,    10,    50,    11,    12,    13,    14,    15,    16,
    17,    21,    18,    19,    21,    51,    21,    35,    21,    20,
     7,     8,    21,     7,     8,     7,     8,     7,     8,    21,
    46,     7,     8,    21,    60,    21,    61,    21,     7,     8,
     6,     9,     7,     8,     7,     8,     7,     8,    21,     7,
     8,     6,    63,    21,   nil,   nil,   nil,     7,     8,   nil,
     7,     8,     7,     8,    21,   nil,    36,    21,   nil,    38,
    21,   nil,    39,     7,     8,   nil,     7,     8,    21,     7,
     8,    21,   nil,    40,    21,   nil,    44,     7,     8,    21,
     7,     8,    21,     7,     8,   nil,   nil,   nil,     7,     8,
   nil,     7,     8,    10,   nil,    11,    12,    13,    14,    15,
    16,    17 ]

racc_action_check = [
    35,    55,    18,    33,    45,    33,    42,    43,    55,    35,
    35,    18,     6,    35,     6,     6,     6,     6,     6,     6,
     6,    17,     6,     6,    50,    41,    10,    19,    11,     9,
    17,    17,    12,    50,    50,    10,    10,    11,    11,    13,
    32,    12,    12,    14,    56,    15,    57,    16,    13,    13,
     0,     1,    14,    14,    15,    15,    16,    16,    49,     0,
     0,    58,    62,    31,   nil,   nil,   nil,    49,    49,   nil,
    58,    58,    31,    31,    22,   nil,    22,    24,   nil,    24,
    25,   nil,    25,    22,    22,   nil,    24,    24,    28,    25,
    25,    26,   nil,    26,    30,   nil,    30,    28,    28,    29,
    26,    26,    27,    30,    30,   nil,   nil,   nil,    29,    29,
   nil,    27,    27,    21,   nil,    21,    21,    21,    21,    21,
    21,    21 ]

racc_action_pointer = [
    48,    51,   nil,   nil,   nil,   nil,     9,   nil,   nil,    29,
    24,    26,    30,    37,    41,    43,    45,    19,     0,    25,
   nil,   110,    72,   nil,    75,    78,    89,   100,    86,    97,
    92,    61,    29,     1,   nil,    -2,   nil,   nil,   nil,   nil,
   nil,    21,     2,     3,   nil,     0,   nil,   nil,   nil,    56,
    22,   nil,   nil,   nil,   nil,    -3,    40,    42,    59,   nil,
   nil,   nil,    58,   nil ]

racc_action_default = [
   -26,   -26,    -1,    -2,    -3,    -4,   -26,   -13,   -14,   -26,
   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,   -26,
    64,   -26,   -26,   -15,   -26,   -26,   -26,   -26,   -26,   -26,
   -26,   -26,   -26,   -26,   -22,   -26,    -5,   -16,    -6,    -7,
    -8,   -26,   -26,   -26,   -12,   -26,   -19,   -21,   -23,   -26,
   -26,    -9,   -10,   -11,   -17,   -26,   -26,   -26,   -26,   -20,
   -24,   -25,   -26,   -18 ]

racc_goto_table = [
     1,     2,    33,    55,    34,    22,    24,    25,    26,   nil,
   nil,   nil,    30,   nil,   nil,    27,    28,    29,    48,   nil,
   nil,   nil,   nil,    37,   nil,    37,    37,    37,    41,    42,
    43,    37,    45,   nil,   nil,   nil,    49,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    56,    57,   nil,   nil,   nil,   nil,   nil,   nil,    62,     2 ]

racc_goto_check = [
     1,     2,     8,     7,     9,     6,     6,     6,     6,   nil,
   nil,   nil,     6,   nil,   nil,     2,     2,     2,     9,   nil,
   nil,   nil,   nil,     2,   nil,     2,     2,     2,     2,     2,
     2,     2,     2,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,     2,   nil,   nil,   nil,   nil,   nil,   nil,     1,     2 ]

racc_goto_pointer = [
   nil,     0,     1,   nil,   nil,   nil,    -5,   -43,   -17,   -15 ]

racc_goto_default = [
   nil,   nil,    23,     3,     4,     5,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  4, 18, :_reduce_5,
  4, 18, :_reduce_6,
  4, 18, :_reduce_7,
  4, 18, :_reduce_8,
  5, 18, :_reduce_9,
  5, 18, :_reduce_10,
  5, 18, :_reduce_11,
  4, 18, :_reduce_12,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 22, :_reduce_15,
  2, 22, :_reduce_16,
  5, 19, :_reduce_17,
  8, 20, :_reduce_18,
  0, 23, :_reduce_19,
  2, 23, :_reduce_20,
  4, 21, :_reduce_21,
  1, 24, :_reduce_22,
  2, 24, :_reduce_23,
  4, 25, :_reduce_24,
  4, 25, :_reduce_25 ]

racc_reduce_n = 26

racc_shift_n = 64

racc_token_table = {
  false => 0,
  :error => 1,
  "(" => 2,
  "+" => 3,
  ")" => 4,
  "-" => 5,
  "*" => 6,
  "/" => 7,
  "<" => 8,
  ">" => 9,
  "=" => 10,
  :IDENT => 11,
  :NUMBER => 12,
  :KW_DEFINE => 13,
  :KW_COND => 14,
  :KW_ELSE => 15 }

racc_nt_base = 16

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"(\"",
  "\"+\"",
  "\")\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"<\"",
  "\">\"",
  "\"=\"",
  "IDENT",
  "NUMBER",
  "KW_DEFINE",
  "KW_COND",
  "KW_ELSE",
  "$start",
  "stmt",
  "expr",
  "define",
  "define_proc",
  "cond",
  "exprs",
  "params",
  "clauses",
  "clause" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_5(val, _values)
                ['+', *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_6(val, _values)
                ['-', *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_7(val, _values)
                ['*', *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_8(val, _values)
                ['/', *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_9(val, _values)
                ['<', val[2], val[3]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_10(val, _values)
                ['>', val[2], val[3]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_11(val, _values)
                ['=', val[2], val[3]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_12(val, _values)
                [val[1], *val[2]]
          
  end
.,.,

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 47)
  def _reduce_15(val, _values)
                [val[0]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_16(val, _values)
                val[0].push(val[1])
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_17(val, _values)
                  [:define, val[2], val[3]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 63)
  def _reduce_18(val, _values)
                      [:define_proc, [val[3], *val[4]], val[6]]
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 68)
  def _reduce_19(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_20(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_21(val, _values)
                    [:cond, *val[2]]
              
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_22(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_23(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 92)
  def _reduce_24(val, _values)
                  [val[1], val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_25(val, _values)
                  [:else, val[2]]
            
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser

end # of module Rubic
