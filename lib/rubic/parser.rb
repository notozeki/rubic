#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module Rubic

class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 132)
EOT = [false, nil] # end of token
SYM_CHARS = Regexp.escape("+-*/<>=?")

def parse(str)
  @s = StringScanner.new(str)
  do_parse
end

def next_token
  @s.skip(/\s+/)
  return EOT if @s.eos?

  case
  when @s.scan(/[0-9]+(\.[0-9]+)?/)
    [:NUMBER, @s[0].include?('.') ? @s[0].to_f : @s[0].to_i]
  when @s.scan(/[()']/)
    [@s[0], nil]
  when @s.scan(/[A-Za-z_#{SYM_CHARS}][A-Za-z0-9_#{SYM_CHARS}]*/o)
    case @s[0] # keyword check
    when 'define'
      [:KW_DEFINE, nil]
    when 'cond'
      [:KW_COND, nil]
    when 'else'
      [:KW_ELSE, nil]
    when 'if'
      [:KW_IF, nil]
    when 'and'
      [:KW_AND, nil]
    when 'or'
      [:KW_OR, nil]
    when 'lambda'
      [:KW_LAMBDA, nil]
    when 'let'
      [:KW_LET, nil]
    when 'quote'
      [:KW_QUOTE, nil]
    else
      [:IDENT, @s[0].to_sym]
    end
  when @s.scan(/"([^"]*)"/)
    [:STRING, @s[1]]
  else
    raise Rubic::ParseError, "unknown character #{@s.getch}"
  end
end

def on_error(t, val, vstack)
  raise Rubic::ParseError, "parse error near #{token_to_str(t)}"
end

...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,    63,    66,    59,     3,     4,     5,     2,    35,    74,
    46,     3,     4,     5,    12,    32,    62,    54,    61,    31,
    64,    12,     2,    14,    17,    15,     3,     4,     5,    18,
    19,    65,    20,    21,    22,    23,    12,     2,    45,    43,
     2,     3,     4,     5,     3,     4,     5,    60,    38,    59,
    69,    12,     2,    37,    12,     2,     3,     4,     5,     3,
     4,     5,    35,    53,    25,    13,    12,     2,    75,    12,
   nil,     3,     4,     5,     2,   nil,    72,   nil,     3,     4,
     5,    12,   nil,   nil,   nil,     2,   nil,    71,    12,     3,
     4,     5,     2,   nil,   nil,   nil,     3,     4,     5,    12,
   nil,   nil,   nil,     2,   nil,   nil,    12,     3,     4,     5,
     2,   nil,   nil,   nil,     3,     4,     5,    12,   nil,   nil,
   nil,     2,   nil,   nil,    12,     3,     4,     5,     2,   nil,
    40,   nil,     3,     4,     5,    12,   nil,   nil,   nil,     2,
   nil,    42,    12,     3,     4,     5,     2,   nil,   nil,   nil,
     3,     4,     5,    12,   nil,   nil,   nil,     2,   nil,   nil,
    12,     3,     4,     5,     2,   nil,   nil,   nil,     3,     4,
     5,    12,   nil,   nil,   nil,     2,   nil,   nil,    12,     3,
     4,     5,     2,   nil,   nil,   nil,     3,     4,     5,    12,
   nil,   nil,   nil,     2,   nil,   nil,    12,     3,     4,     5,
     2,   nil,   nil,   nil,     3,     4,     5,    12,   nil,   nil,
   nil,     2,   nil,   nil,    12,     3,     4,     5,   nil,   nil,
    49,   nil,   nil,   nil,   nil,    12 ]

racc_action_check = [
     0,    55,    58,    55,     0,     0,     0,    70,    33,    70,
    33,    70,    70,    70,     0,    18,    52,    44,    52,    18,
    56,    70,     2,     2,     2,     2,     2,     2,     2,     2,
     2,    57,     2,     2,     2,     2,     2,    12,    32,    29,
    69,    12,    12,    12,    69,    69,    69,    51,    22,    51,
    62,    12,    14,    21,    69,    15,    14,    14,    14,    15,
    15,    15,    19,    39,    13,     1,    14,    16,    73,    15,
   nil,    16,    16,    16,    68,   nil,    68,   nil,    68,    68,
    68,    16,   nil,   nil,   nil,    67,   nil,    67,    68,    67,
    67,    67,    20,   nil,   nil,   nil,    20,    20,    20,    67,
   nil,   nil,   nil,    63,   nil,   nil,    20,    63,    63,    63,
    61,   nil,   nil,   nil,    61,    61,    61,    63,   nil,   nil,
   nil,    23,   nil,   nil,    61,    23,    23,    23,    26,   nil,
    26,   nil,    26,    26,    26,    23,   nil,   nil,   nil,    28,
   nil,    28,    26,    28,    28,    28,    60,   nil,   nil,   nil,
    60,    60,    60,    28,   nil,   nil,   nil,    30,   nil,   nil,
    60,    30,    30,    30,    31,   nil,   nil,   nil,    31,    31,
    31,    30,   nil,   nil,   nil,    50,   nil,   nil,    31,    50,
    50,    50,    49,   nil,   nil,   nil,    49,    49,    49,    50,
   nil,   nil,   nil,    48,   nil,   nil,    49,    48,    48,    48,
    36,   nil,   nil,   nil,    36,    36,    36,    48,   nil,   nil,
   nil,    35,   nil,   nil,    36,    35,    35,    35,   nil,   nil,
    35,   nil,   nil,   nil,   nil,    35 ]

racc_action_pointer = [
    -2,    65,    20,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    35,    64,    50,    53,    65,   nil,    13,    60,
    90,    51,    46,   119,   nil,   nil,   126,   nil,   137,    35,
   155,   162,    32,     6,   nil,   209,   198,   nil,   nil,    59,
   nil,   nil,   nil,   nil,    13,   nil,   nil,   nil,   191,   180,
   173,    43,    14,   nil,   nil,    -3,    16,    27,    -2,   nil,
   144,   108,    44,   101,   nil,   nil,   nil,    83,    72,    38,
     5,   nil,   nil,    64,   nil,   nil ]

racc_action_default = [
   -34,   -34,   -34,    -5,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -34,   -34,   -34,   -34,   -16,    -4,   -34,   -34,
   -34,   -34,   -34,   -34,   -33,    76,   -34,   -14,   -34,   -34,
   -17,   -34,   -34,   -34,   -23,   -34,   -34,   -20,   -30,   -34,
    -1,   -15,    -2,    -3,   -34,   -20,   -22,   -24,   -34,   -34,
   -34,   -34,   -34,   -32,   -18,   -34,   -34,   -34,   -34,   -21,
   -34,   -34,   -34,   -34,   -25,   -26,   -27,   -34,   -34,   -34,
   -34,   -28,   -29,   -34,   -19,   -31 ]

racc_goto_table = [
     1,    34,    16,    51,    33,    26,    28,    30,    29,    52,
   nil,    55,    24,   nil,   nil,    47,   nil,   nil,   nil,   nil,
    36,   nil,   nil,    39,   nil,   nil,    41,   nil,    41,   nil,
    41,    44,   nil,   nil,   nil,    48,    50,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,    57,
    58,    67,    68,   nil,    70,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,    41,    73,
    41 ]

racc_goto_check = [
     1,    12,     1,    10,    11,     2,     2,     2,     3,    13,
   nil,    10,     1,   nil,   nil,    12,   nil,   nil,   nil,   nil,
     1,   nil,   nil,     1,   nil,   nil,     1,   nil,     1,   nil,
     1,     1,   nil,   nil,   nil,     1,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,     1,
     1,     2,     2,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,     1,     1,
     1 ]

racc_goto_pointer = [
   nil,     0,    -9,    -8,   nil,   nil,   nil,   nil,   nil,   nil,
   -34,   -15,   -18,   -29 ]

racc_goto_default = [
   nil,    27,   nil,   nil,     6,     7,     8,     9,    10,    11,
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 18, :_reduce_1,
  4, 18, :_reduce_2,
  4, 18, :_reduce_3,
  2, 18, :_reduce_4,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 18, :_reduce_none,
  1, 19, :_reduce_14,
  2, 19, :_reduce_15,
  0, 20, :_reduce_16,
  1, 20, :_reduce_none,
  5, 21, :_reduce_18,
  8, 21, :_reduce_19,
  0, 27, :_reduce_20,
  2, 27, :_reduce_21,
  4, 22, :_reduce_22,
  1, 28, :_reduce_23,
  2, 28, :_reduce_24,
  4, 29, :_reduce_25,
  4, 29, :_reduce_26,
  6, 23, :_reduce_27,
  7, 24, :_reduce_28,
  7, 25, :_reduce_29,
  0, 30, :_reduce_30,
  5, 30, :_reduce_31,
  4, 26, :_reduce_32,
  2, 26, :_reduce_33 ]

racc_reduce_n = 34

racc_shift_n = 76

racc_token_table = {
  false => 0,
  :error => 1,
  "(" => 2,
  :KW_AND => 3,
  ")" => 4,
  :KW_OR => 5,
  :IDENT => 6,
  :NUMBER => 7,
  :STRING => 8,
  :KW_DEFINE => 9,
  :KW_COND => 10,
  :KW_ELSE => 11,
  :KW_IF => 12,
  :KW_LAMBDA => 13,
  :KW_LET => 14,
  :KW_QUOTE => 15,
  "'" => 16 }

racc_nt_base = 17

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"(\"",
  "KW_AND",
  "\")\"",
  "KW_OR",
  "IDENT",
  "NUMBER",
  "STRING",
  "KW_DEFINE",
  "KW_COND",
  "KW_ELSE",
  "KW_IF",
  "KW_LAMBDA",
  "KW_LET",
  "KW_QUOTE",
  "\"'\"",
  "$start",
  "expr",
  "seq",
  "opt_seq",
  "define",
  "cond",
  "if",
  "lambda",
  "let",
  "quote",
  "params",
  "clauses",
  "clause",
  "defs" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_1(val, _values)
                [:and, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_2(val, _values)
                [:or, *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_3(val, _values)
                [val[1], *val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_4(val, _values)
                []
          
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_14(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_15(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_16(val, _values)
                  []
            
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_18(val, _values)
                  [:define, val[2], val[3]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_19(val, _values)
                  [:define, [val[3], *val[4]], *val[6]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_20(val, _values)
                      []
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_21(val, _values)
                      val[0].push(val[1])
                
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 67)
  def _reduce_22(val, _values)
                  [:cond, *val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_23(val, _values)
                  [val[0]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_24(val, _values)
                  val[0].push(val[1])
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 81)
  def _reduce_25(val, _values)
                  [val[1], val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_26(val, _values)
                  [:else, val[2]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_27(val, _values)
              [:if, val[2], val[3], val[4]]
        
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_28(val, _values)
                  [:lambda, val[3], *val[5]]
            
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_29(val, _values)
                [:let, val[3], *val[5]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_30(val, _values)
                []
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_31(val, _values)
                val[0].push([val[2], val[3]])
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_32(val, _values)
                [:quote, val[2]]
          
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_33(val, _values)
                [:quote, val[1]]
          
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class Parser

end # of module Rubic
